name: Build Windows EXE

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Python (with caching dependencies)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have a requirements.txt

      # Step 5: Build EXE with PyInstaller
      - name: Build EXE
        run: |
          pyinstaller --onefile --windowed --icon=icon.ico --distpath=dist --workpath=build dns_updater.py

      # Step 6: Upload EXE Artifact
      - name: Upload EXE Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dns-updater-exe
          path: dist/dns_updater.exe

      # Optional: Clean up build files after EXE creation to save space
      - name: Clean up build files
        run: |
          Remove-Item -Recurse -Force build
          Remove-Item -Recurse -Force dist
